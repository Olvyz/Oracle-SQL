1. Rewrite and run this statemenet to create the locations2 table, which will contain the same columns as locations:
CREATE TABLE locations2 AS (SELECT * FROM locations WHERE 1 = 2);
2. Add 2 lines to the locations2 table with information about the location id, address, city, country id. Let the given lines refer to the country Italy
3. Commit
4. Add 2 more rows to the locations2 table, without using the enumeration of the names of the columns in which the information is entered. Let the given lines refer 
to the country France. When writing values, use functions where possible
5. Commit
6. Add rows from the locations table to the locations2 table where the length of the state_province column value is greater than 9
7. Commit
8. Rewrite and run this statemenet to create the locations4europe table, which will contain the same columns as locations:
CREATE TABLE locations4europe AS (SELECT * FROM locations WHERE 1 = 2);
9. With one statement add to the locations2 table all the information for all rows from the locations table, and in the locations4europe table add information about the 
location id, address, city, country id only for those rows from the locations table where cities are located in Europe
10. Commit
11. In the locations2 table, change the postal code to any value on the lines where there is currently no postal code information
12. Rollback
13. In the locations2 table, change the postal code on the lines where there is currently no postal code information. The new value must be the code from the locations 
table for the row with id 2600
14. Commit
15. Remove the rows from the locations2 table, where the country id is "IT"
16. Create the first savepoint
17. In the locations2 table, change the address in those lines where the location id is greater than 2500. The new value should be “Sezam st. 18"
18. Create a second savepoint
19. Remove the rows from the locations2 table where the address is “Sezam st. 18"
20. Roll back the changes to the first savepoint
21. Commit
